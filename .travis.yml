language: minimal
os: linux
dist: bionic
sudo: true  # For the 7.5GB limit

env:
  global:
    - EMU_ABI=x86_64
    - EMU_API=29
    - EMU_FLAVOR=default
    - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
    - ANDROID_HOME="$HOME/android-sdk-linux"
    - JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    - PATH="$JAVA_HOME/bin:$HOME/bin:$ANDROID_HOME/emulator:ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
    - TERM=dumb
    # Coverity
    - secure: "DTBBKdwZE5yxPjJQG8/wU/+LJ1A3MtUYNaf8O/yhmQNo4UcxQF+3KOoY5OK4vvoTewisUqnVRhXhD8rMYzBZiNtaGF8eSMGXVWUVb6YhOPQ0oMHKSmVgopEHzhoGa+9HDJ6xyQZdALJB8GVlwamTwO/1qk/xI02mjUNEtdk8cuc="

cache:
  directories:
    - $HOME/.cache/ci-support
    - $HOME/.cache/lint
    - $HOME/.cache/ndk
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
before_cache:
  - find $HOME/.gradle -name "*.lock" -exec rm {} \;
  - rm -rf $HOME/.gradle/caches/[1-9]*

addons:
  apt:
    packages:
      - clang-5.0
      - inotify-tools
      - openjdk-8-jdk-headless  # for building
      - xqilla  # ./ci/check-lint-count.bash
      - qemu-kvm  # for emulator
      - libvirt-bin  # for emulator
      - ubuntu-vm-builder  # for emulator
      - bridge-utils  # for emulator
  coverity_scan:
    project:
      name: "connectbot/connectbot"
      description: "The first SSH client for Android."
    notification_email: developers@connectbot.org
    build_command_prepend: "./gradlew clean"
    build_command: "./gradlew assemble"
    branch_pattern: coverity_scan

before_script:
  # Install Android stuff
  - curl -L $ANDROID_TOOLS_URL -o $HOME/tools.zip
  - unzip -oq $HOME/tools.zip -d $ANDROID_HOME
  - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
  - $ANDROID_HOME/tools/bin/sdkmanager tools | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager platform-tools | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager --channel=3 'emulator' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-${EMU_API}" | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-${EMU_API};${EMU_FLAVOR};${EMU_ABI}" | tr '\r' '\n' | uniq
  # Allow use of KVM
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm
  # Create and start emulator as early as possible
  - $ANDROID_HOME/tools/bin/avdmanager create avd --force --name test --package "system-images;android-${EMU_API};${EMU_FLAVOR};${EMU_ABI}" --abi ${EMU_ABI} --device 'Nexus 4' --sdcard 128M
  - sudo -E sudo -u $USER -E bash -c "$ANDROID_HOME/emulator/emulator -avd test -skin 768x1280 -no-audio -no-window -no-boot-anim -no-snapshot -camera-back none -camera-front none -qemu -m 2048 &"
  - $ANDROID_HOME/tools/bin/sdkmanager 'build-tools;29.0.2' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager 'platforms;android-28' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager 'extras;android;m2repository' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager 'extras;google;m2repository' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager 'extras;google;google_play_services' | tr '\r' '\n' | uniq
  - $ANDROID_HOME/tools/bin/sdkmanager ndk-bundle | tr '\r' '\n' | uniq
  # Download the emulator support stuff
  - mkdir -p $HOME/.cache/ci-support
  - curl -L https://github.com/connectbot/ci-support/archive/master.zip -z $HOME/.cache/ci-support/master.zip -o $HOME/.cache/ci-support/master.zip
  - unzip -oq $HOME/.cache/ci-support/master.zip -d $HOME
  - mkdir -p $HOME/bin
  - curl -L https://raw.githubusercontent.com/travis-ci/travis-cookbooks/master/community-cookbooks/android-sdk/files/default/android-wait-for-emulator -o $HOME/bin/android-wait-for-emulator
  - chmod +x $HOME/bin/android-wait-for-emulator
  # For the lint checking mechanism
  - mkdir -p $HOME/.cache/lint
  # Try to download Gradle deps while Android is booting
  - ./gradlew --parallel -Dorg.gradle.parallel.intra=true resolveDependencies
  ### The rest of the commands need the emulator running
  - mkdir -p $HOME/emulator-status
  - |
    ( android-wait-for-emulator;
    adb shell input keyevent 82 &
    # Install our ci-support stuff to make the emulator tests more reliable.
    adb install -r $HOME/ci-support-master/apk/android_emulator_hacks.apk;
    adb shell pm grant no.finn.android_emulator_hacks android.permission.SET_ANIMATION_SCALE;
    adb shell am start -n no.finn.android_emulator_hacks/no.finn.android_emulator_hacks.HackActivity;
    touch $HOME/emulator-status/ready ) &

script:
  # Split up to reduce memory requirements
  - ./gradlew --stacktrace assemble
  - ./gradlew --stacktrace check
  - |
    # Note there might be a race condition where we create the file between the check
    # and the inotifywait, so we use a timeout and a loop to minimize the chances of
    # waiting forever.
    while [[ ! -f $HOME/emulator-status/ready ]]; do
      inotifywait -t 20 -e create $HOME/emulator-status;
    done;
    ./gradlew --stacktrace connectedCheck
  - ./ci/check-lint-count.bash app/build/reports/lint-results.xml $HOME/.cache/lint/lint-results.xml

after_success: ./gradlew coveralls
